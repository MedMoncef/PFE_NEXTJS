import Head from 'next/head';
import { useState, useEffect } from 'react';
import styles from '@/styles/Home.module.css';
import { Typography, Stack, Card, CardContent, Grid, createTheme, ThemeProvider, CardMedia, Button, Container, Box, CssBaseline, CardActions } from '@mui/material';
import axios from 'axios';
import Pagination from '@mui/material/Pagination';
import Carousel from 'react-material-ui-carousel';
import { useRouter } from 'next/router';
import SliderIndex from '@/components/IndexParts/SliderIndex';
import ListService from '@/components/Tools/ListService';
import AboutContent from '@/components/AboutContent';
import InstagramDisplay from '@/components/Tools/InstagramDisplay';

const API_URL1 = 'http://localhost:7000/menus';
const API_URL2 = 'http://localhost:7000/testimony';
const API_URL3 = 'http://localhost:7000/rooms';
const API_URL4 = 'http://localhost:7000/blogs';
const API_URL5 = 'http://localhost:7000/roomTypes';
const ITEMS_PER_PAGE = 3;

// Custom theme with water-themed colors
const theme = createTheme({
  palette: {
    primary: {
      main: '#1565c0', // Blue color for primary elements
    },
    secondary: {
      main: '#4dd0e1', // Teal color for secondary elements
    },
  },
});

export default function Home() {
  const [currentImage, setCurrentImage] = useState(0);
  const [sliders, setSliders] = useState([]);
  const [testimonies, setTestimonies] = useState([]);
  const [rooms, setRooms] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [filteredRooms, setFilteredRooms] = useState([]);
  const [searchValue, setSearchValue] = useState('');
  const [selectedPrice, setSelectedPrice] = useState('');
  const [selectedView, setSelectedView] = useState('');
  const [menus, setMenus] = useState([]);
  const [blogs, setBlogs] = useState([]);
  const router = useRouter();
  const [roomTypes, setRoomTypes] = useState([]);
  const [selectedRoomType, setSelectedRoomType] = useState('');
  const [chambres, setChambres] = useState([]);
  
  interface Room {
    _id: String;
    ID_Rooms: string;
    Room_Number: string;
    Floor_Number: string;
    Name: string;
    Image: string;
    Description: string;
    Max: number;
    View: string;
    Size: string;
    Bed_Number: string;
    Type: string;
    Rating: number;
    Price: number;
  }

  interface Menu {
    ID_Menu: string,
    Image: string,
    Nom: string,
    Description: string,
    Prix: Number,
    Type: string
  }

  interface Blog {
    ID_Blog: string,
    Image: string,
    Titre: string,
    Content: string,
    DateU: Date
  }

  const fetchData = async () => {
    const result1 = await axios(API_URL1);
    const result2 = await axios(API_URL2);
    const result3 = await axios(API_URL3);
    const result4 = await axios(API_URL4);
    const result5 = await axios(API_URL5);
    setMenus(result1.data);
    setTestimonies(result2.data);
    setRooms(result3.data);
    setBlogs(result4.data);
    setRoomTypes(result5.data);
  };
  
  useEffect(() => {
    fetchData();
  }, []);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentImage((prevImage) => (prevImage + 1) % sliders.length);
      setCurrentImage((prevImage) => (prevImage + 1) % testimonies.length);
    }, 4000); // Change image every 5 seconds

    return () => clearInterval(interval);
  }, [sliders, testimonies]);


  useEffect(() => {
    filterRooms();
  }, [rooms, searchValue, selectedPrice, selectedRoomType, selectedView]);

  const handlePageChange = (event, page) => {
    setCurrentPage(page);
  };


  const filterRooms = () => {
    let filtered = rooms;

    setTotalPages(Math.ceil(filtered.length / ITEMS_PER_PAGE));
    setFilteredRooms(filtered);
    setCurrentPage(1);
  };

  const getDisplayedRooms = () => {
    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
    const endIndex = startIndex + ITEMS_PER_PAGE;
    return rooms.slice(startIndex, endIndex);
  };

  const blogSets = [];
  for (let i = 0; i < blogs.length; i += 3) {
    blogSets.push(blogs.slice(i, i + 3));
  }

  const menuSets = [];
  for (let i = 0; i < menus.length; i += 3) {
    menuSets.push(menus.slice(i, i + 3));
  }

  const handleRoomTypeChange = (event) => {
    setSelectedRoomType(event.target.value);
    const filteredChambres = rooms.filter((room) => room.Type === event.target.value);
    setChambres(filteredChambres);
  };

  return (
    <>
      <Head>
        <title>Harbor Hotel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.jpg" />
      </Head>

      <div>

      <SliderIndex />
      
        <div style={{backgroundColor: '#f8f9fa', padding: '3% 0'}}>
        		
        <div className={styles.about}>
          <h2>WELCOME TO HARBOR LIGHTS HOTEL</h2>
          <h1>You'll Never Want To Leave</h1>
        </div>

          <ListService />
            
          <AboutContent />
        
        </div>

				{/* ========================================================== */}

      <div style={{marginBottom: '5%'}}>
        <div className={styles.about}>
          <h2>HARBOR LIGHTS ROOMS</h2>
          <h1>Hotel Master's Rooms</h1>
                  <div style={{ textAlign: 'center', marginTop: '3%' }}>
                    <Button variant="contained" color="secondary" onClick={() => router.push(`/Client/Room/rooms`)}>
                      View more
                    </Button>
                  </div>
        </div>

        <Grid container style={{ margin: '2% 0', display: 'flex', justifyContent: 'center' }}>
        {getDisplayedRooms().map((room: Room, index) => (
          <Card sx={{ maxWidth: 350, margin: '2% 2%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }} key={room.ID_Rooms}>
            <CardMedia
              sx={{ height: 250 }}
              image={`/images/Rooms/${room.Image}`}
              title="Room image"
            />
            <CardContent>
              <div className={styles.rooms}>
                <h1>{room.Name}</h1>
                <h2>{room.Price}$ per night</h2>
              </div>
              <Typography variant="body2" color="text.secondary">
                {room.Description}
              </Typography>
            </CardContent>
            <CardActions style={{ marginTop: 'auto' }}>
              <Button size="small" onClick={() => router.push(`/Client/Room/${room._id}`)}>Reserver</Button>
            </CardActions>
          </Card>
        ))}
      </Grid>

        <Box display="flex" justifyContent="center" marginBottom={5}>
          <Pagination count={totalPages} page={currentPage} onChange={handlePageChange} />
        </Box>

      </div>


      <div style={{backgroundColor: '#f8f9fa', padding: '3% 0'}}>
          <div className={styles.about}>
            <h2>HARBORLIGHTS RESTAURANT MENU</h2>
            <h1>Today's Specialties</h1>
            <div style={{ textAlign: 'center', marginTop: '3%' }}>
                    <Button variant="contained" color="primary" onClick={() => router.push(`/Client/restaurant`)}>
                      View more
                    </Button>
                  </div>
          </div>


      <Carousel sx={{ marginTop: '2%' }}>
        {menuSets.map((menuSet, index) => (
        <Grid container key={index} style={{ margin: '0 0', display: 'flex', justifyContent: 'center' }}>
          {menuSet.map((menu: Menu) => (
            <Card sx={{ maxWidth: 350, margin: '2% 2%' }} key={menu.ID_Menu} style={{ alignSelf: 'flex' }}>
              <CardMedia
                  component="img"
                  sx={{ height: 200 }}
                  image={`/images/Menu/${menu.Image}`}
                  alt="Menu Item"
                />
                <Box sx={{ display: 'flex', flexDirection: 'column' }}>
                  <CardContent sx={{ flex: '1 0 auto' }}>
                    <Typography component="div" variant="h5">
                      {menu.Nom}
                      <div style={{ display: 'flex', width: '80px', color: '#2f89fc', textAlign: 'right', fontSize: '20px', fontWeight: '600' }}>
                        $ {menu.Prix}
                      </div>
                    </Typography>
                    <Typography variant="subtitle1" color="text.secondary" component="div">
                      {menu.Description}
                    </Typography>
                  </CardContent>
                </Box>
              </Card>
            ))}
          </Grid>
          ))}
          </Carousel>  
        </div>


        <div style={{ padding: '3% 0'}}>
          <div className={styles.about}>
            <h2>HARBORLIGHTS BLOGS</h2>
            <h1>Recent Blog</h1>
            <div style={{ textAlign: 'center', marginTop: '3%' }}>
                    <Button variant="outlined" color="primary" onClick={() => router.push(`/Client/Blog/blogs`)}>
                      View more
                    </Button>
                  </div>
          </div>

          <Carousel sx={{ marginTop: '2%' }}>
            {blogSets.map((blogSet, index) => (
            <Grid container key={index} style={{ margin: '0 0', display: 'flex', justifyContent: 'center' }}>
              {blogSet.map((blog: Blog) => (
                <Card sx={{ maxWidth: 350, margin: '2% 2%' }} key={blog.ID_Blog} style={{ alignSelf: 'flex' }}>
                    <CardMedia
                        component="img"
                        sx={{ height: 200 }}
                        image={`/images/Blog/${blog.Image}`}
                        alt="Blog Image"
                      />
                      <CardContent>
                        <Typography gutterBottom variant="h5" component="div">
                          {blog.Titre}
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                          {blog.Content}
                        </Typography>
                      </CardContent>
                      <CardActions>
                      </CardActions>
                    </Card>
                ))}
              </Grid>
            ))}
          </Carousel>        
          </div>



          <div>
              <div className={styles.about}>
                  <h2>HARBORLIGHTS PHOTOS</h2>
                  <h1>Instagram</h1>
              </div>

          <InstagramDisplay />

          </div>
      </div>
    </>
  );
}